; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\usart3.o --depend=..\OBJ\usart3.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\OLED -I..\HARDWARE\ADC -I..\HARDWARE\TIMER -I..\HARDWARE\MOTOR -I..\BALANCE\CONTROL -I..\HARDWARE\ENCODER -I..\HARDWARE\IIC -I..\BALANCE\CONTROL -I..\BALANCE\DMP -I..\BALANCE\filter -I..\BALANCE\MPU6050 -I..\BALANCE\show -I..\BALANCE\controls -I..\HARDWARE\USART3 -I..\HARDWARE\EXTI -I..\HARDWARE\DataScope_DP -I"H:\KEIL MDK4\ARM\INC" -I"H:\KEIL MDK4\ARM\INC\STMicroelectronics" -DSTM32F10X_MD --omf_browse=..\OBJ\usart3.crf ..\HARDWARE\USART3\usart3.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  uart3_init PROC
;;;12     **************************************************************************/
;;;13     void uart3_init(u32 pclk2,u32 bound)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;14     {  	 
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;15     	float temp;
;;;16     	u16 mantissa;
;;;17     	u16 fraction;	   
;;;18     	temp=(float)(pclk2*1000000)/(bound*16);//得到USARTDIV
000008  0130              LSLS     r0,r6,#4
00000a  f7fffffe          BL       __aeabi_ui2f
00000e  4681              MOV      r9,r0
000010  49ce              LDR      r1,|L1.844|
000012  fb05f001          MUL      r0,r5,r1
000016  f7fffffe          BL       __aeabi_ui2f
00001a  4682              MOV      r10,r0
00001c  4649              MOV      r1,r9
00001e  f7fffffe          BL       __aeabi_fdiv
000022  4607              MOV      r7,r0
;;;19     	mantissa=temp;				 //得到整数部分
000024  4638              MOV      r0,r7
000026  f7fffffe          BL       __aeabi_f2uiz
00002a  b284              UXTH     r4,r0
;;;20     	fraction=(temp-mantissa)*16; //得到小数部分	 
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       __aeabi_ui2f
000032  4683              MOV      r11,r0
000034  4639              MOV      r1,r7
000036  f7fffffe          BL       __aeabi_frsub
00003a  4682              MOV      r10,r0
00003c  f04f4183          MOV      r1,#0x41800000
000040  f7fffffe          BL       __aeabi_fmul
000044  4681              MOV      r9,r0
000046  f7fffffe          BL       __aeabi_f2uiz
00004a  4680              MOV      r8,r0
;;;21       mantissa<<=4;
00004c  0124              LSLS     r4,r4,#4
;;;22     	mantissa+=fraction; 
00004e  eb040008          ADD      r0,r4,r8
000052  b284              UXTH     r4,r0
;;;23     	RCC->APB2ENR|=1<<3;   //使能PORTB口时钟  
000054  48be              LDR      r0,|L1.848|
000056  6980              LDR      r0,[r0,#0x18]
000058  f0400008          ORR      r0,r0,#8
00005c  49bc              LDR      r1,|L1.848|
00005e  6188              STR      r0,[r1,#0x18]
;;;24     	RCC->APB1ENR|=1<<18;  //使能串口时钟 
000060  4608              MOV      r0,r1
000062  69c0              LDR      r0,[r0,#0x1c]
000064  f4402080          ORR      r0,r0,#0x40000
000068  61c8              STR      r0,[r1,#0x1c]
;;;25     	GPIOB->CRH&=0XFFFF00FF; 
00006a  48ba              LDR      r0,|L1.852|
00006c  6800              LDR      r0,[r0,#0]
00006e  f420407f          BIC      r0,r0,#0xff00
000072  49b9              LDR      r1,|L1.856|
000074  f8c10c04          STR      r0,[r1,#0xc04]
;;;26     	GPIOB->CRH|=0X00008B00;//IO状态设置
000078  4608              MOV      r0,r1
00007a  f8d00c04          LDR      r0,[r0,#0xc04]
00007e  f440400b          ORR      r0,r0,#0x8b00
000082  f8c10c04          STR      r0,[r1,#0xc04]
;;;27     	GPIOB->ODR|=1<<10;	  
000086  4608              MOV      r0,r1
000088  f8d00c0c          LDR      r0,[r0,#0xc0c]
00008c  f4406080          ORR      r0,r0,#0x400
000090  f8c10c0c          STR      r0,[r1,#0xc0c]
;;;28     	RCC->APB1RSTR|=1<<18;   //复位串口1
000094  48ae              LDR      r0,|L1.848|
000096  6900              LDR      r0,[r0,#0x10]
000098  f4402080          ORR      r0,r0,#0x40000
00009c  49ac              LDR      r1,|L1.848|
00009e  6108              STR      r0,[r1,#0x10]
;;;29     	RCC->APB1RSTR&=~(1<<18);//停止复位	   	   
0000a0  4608              MOV      r0,r1
0000a2  6900              LDR      r0,[r0,#0x10]
0000a4  f4202080          BIC      r0,r0,#0x40000
0000a8  6108              STR      r0,[r1,#0x10]
;;;30     	//波特率设置
;;;31      	USART3->BRR=mantissa; // 波特率设置	 
0000aa  f04f2040          MOV      r0,#0x40004000
0000ae  f8a04808          STRH     r4,[r0,#0x808]
;;;32     	USART3->CR1|=0X200C;  //1位停止,无校验位.
0000b2  48aa              LDR      r0,|L1.860|
0000b4  8800              LDRH     r0,[r0,#0]
0000b6  f242010c          MOV      r1,#0x200c
0000ba  ea400001          ORR      r0,r0,r1
0000be  f04f2140          MOV      r1,#0x40004000
0000c2  f8a1080c          STRH     r0,[r1,#0x80c]
;;;33     	//使能接收中断
;;;34     	USART3->CR1|=1<<8;    //PE中断使能
0000c6  4608              MOV      r0,r1
0000c8  f8b0080c          LDRH     r0,[r0,#0x80c]
0000cc  f4407080          ORR      r0,r0,#0x100
0000d0  f8a1080c          STRH     r0,[r1,#0x80c]
;;;35     	USART3->CR1|=1<<5;    //接收缓冲区非空中断使能	    	
0000d4  4608              MOV      r0,r1
0000d6  f8b0080c          LDRH     r0,[r0,#0x80c]
0000da  f0400020          ORR      r0,r0,#0x20
0000de  499f              LDR      r1,|L1.860|
0000e0  8008              STRH     r0,[r1,#0]
;;;36     	MY_NVIC_Init(2,1,USART3_IRQn,2);//组2，最低优先级 
0000e2  f04f0302          MOV      r3,#2
0000e6  f04f0227          MOV      r2,#0x27
0000ea  f04f0101          MOV      r1,#1
0000ee  4618              MOV      r0,r3
0000f0  f7fffffe          BL       MY_NVIC_Init
;;;37     }
0000f4  e8bd9ff0          POP      {r4-r12,pc}
;;;38     
                          ENDP

                  USART3_IRQHandler PROC
;;;43     **************************************************************************/
;;;44     void USART3_IRQHandler(void)
0000f8  4899              LDR      r0,|L1.864|
;;;45     {	
;;;46     	if(USART3->SR&(1<<5))//接收到数据
0000fa  8800              LDRH     r0,[r0,#0]
0000fc  f0100f20          TST      r0,#0x20
000100  d079              BEQ      |L1.502|
;;;47     	{	  
;;;48     	 static	int uart_receive=0;//蓝牙接收相关变量
;;;49     	 uart_receive=USART3->DR; 
000102  4898              LDR      r0,|L1.868|
000104  8800              LDRH     r0,[r0,#0]
000106  4998              LDR      r1,|L1.872|
000108  6008              STR      r0,[r1,#0]  ; uart_receive
;;;50     	 mode_data[0]=uart_receive;
00010a  4608              MOV      r0,r1
00010c  6800              LDR      r0,[r0,#0]  ; uart_receive
00010e  4997              LDR      r1,|L1.876|
000110  7008              STRB     r0,[r1,#0]
;;;51     			if(mode_data[0]==six_data_start[0]			&&mode_data[1]==six_data_start[1]			&&mode_data[2]==six_data_start[2]			)
000112  4608              MOV      r0,r1
000114  7800              LDRB     r0,[r0,#0]  ; mode_data
000116  4996              LDR      r1,|L1.880|
000118  7809              LDRB     r1,[r1,#0]  ; six_data_start
00011a  4288              CMP      r0,r1
00011c  d112              BNE      |L1.324|
00011e  4893              LDR      r0,|L1.876|
000120  7840              LDRB     r0,[r0,#1]  ; mode_data
000122  4993              LDR      r1,|L1.880|
000124  7849              LDRB     r1,[r1,#1]  ; six_data_start
000126  4288              CMP      r0,r1
000128  d10c              BNE      |L1.324|
00012a  4890              LDR      r0,|L1.876|
00012c  7880              LDRB     r0,[r0,#2]  ; mode_data
00012e  4990              LDR      r1,|L1.880|
000130  7889              LDRB     r1,[r1,#2]  ; six_data_start
000132  4288              CMP      r0,r1
000134  d106              BNE      |L1.324|
;;;52     		{	
;;;53     			Flag_Stop=0;   //3击低速挡 小车关闭电机
000136  2000              MOVS     r0,#0
000138  498e              LDR      r1,|L1.884|
00013a  7008              STRB     r0,[r1,#0]
;;;54     			mode_data[0]=0;	mode_data[1]=0;	mode_data[2]=0;	
00013c  498b              LDR      r1,|L1.876|
00013e  7008              STRB     r0,[r1,#0]
000140  7048              STRB     r0,[r1,#1]
000142  7088              STRB     r0,[r1,#2]
                  |L1.324|
;;;55     		}
;;;56     			if(mode_data[0]==six_data_stop[0]			&&mode_data[1]==six_data_stop[1]			&&mode_data[2]==six_data_stop[2]			)
000144  4889              LDR      r0,|L1.876|
000146  7800              LDRB     r0,[r0,#0]  ; mode_data
000148  498b              LDR      r1,|L1.888|
00014a  7809              LDRB     r1,[r1,#0]  ; six_data_stop
00014c  4288              CMP      r0,r1
00014e  d113              BNE      |L1.376|
000150  4886              LDR      r0,|L1.876|
000152  7840              LDRB     r0,[r0,#1]  ; mode_data
000154  4988              LDR      r1,|L1.888|
000156  7849              LDRB     r1,[r1,#1]  ; six_data_stop
000158  4288              CMP      r0,r1
00015a  d10d              BNE      |L1.376|
00015c  4883              LDR      r0,|L1.876|
00015e  7880              LDRB     r0,[r0,#2]  ; mode_data
000160  4985              LDR      r1,|L1.888|
000162  7889              LDRB     r1,[r1,#2]  ; six_data_stop
000164  4288              CMP      r0,r1
000166  d107              BNE      |L1.376|
;;;57     		{	
;;;58     			Flag_Stop=1;   //3击高速挡 小车启动电机
000168  2001              MOVS     r0,#1
00016a  4982              LDR      r1,|L1.884|
00016c  7008              STRB     r0,[r1,#0]
;;;59     			mode_data[0]=0;	mode_data[1]=0;	mode_data[2]=0;	
00016e  2000              MOVS     r0,#0
000170  497e              LDR      r1,|L1.876|
000172  7008              STRB     r0,[r1,#0]
000174  7048              STRB     r0,[r1,#1]
000176  7088              STRB     r0,[r1,#2]
                  |L1.376|
;;;60     		}
;;;61     		if(uart_receive==0x59)  Flag_sudu=2;  //低速挡（默认值）
000178  487b              LDR      r0,|L1.872|
00017a  6800              LDR      r0,[r0,#0]  ; uart_receive
00017c  2859              CMP      r0,#0x59
00017e  d102              BNE      |L1.390|
000180  2002              MOVS     r0,#2
000182  497e              LDR      r1,|L1.892|
000184  7008              STRB     r0,[r1,#0]
                  |L1.390|
;;;62     		if(uart_receive==0x58)  Flag_sudu=1;  //高速档
000186  4878              LDR      r0,|L1.872|
000188  6800              LDR      r0,[r0,#0]  ; uart_receive
00018a  2858              CMP      r0,#0x58
00018c  d102              BNE      |L1.404|
00018e  2001              MOVS     r0,#1
000190  497a              LDR      r1,|L1.892|
000192  7008              STRB     r0,[r1,#0]
                  |L1.404|
;;;63     		
;;;64     	  if(uart_receive>10)  //默认使用app为：MiniBalanceV3.5 因为MiniBalanceV3.5的遥控指令为A~H 其HEX都大于10
000194  4874              LDR      r0,|L1.872|
000196  6800              LDR      r0,[r0,#0]  ; uart_receive
000198  280a              CMP      r0,#0xa
00019a  dd65              BLE      |L1.616|
;;;65         {			
;;;66     			if(uart_receive==0x5A)	Flag_Qian=0,Flag_Hou=0,Flag_Left=0,Flag_Right=0;//////////////刹车
00019c  4872              LDR      r0,|L1.872|
00019e  6800              LDR      r0,[r0,#0]  ; uart_receive
0001a0  285a              CMP      r0,#0x5a
0001a2  d109              BNE      |L1.440|
0001a4  2000              MOVS     r0,#0
0001a6  4976              LDR      r1,|L1.896|
0001a8  7008              STRB     r0,[r1,#0]
0001aa  4976              LDR      r1,|L1.900|
0001ac  7008              STRB     r0,[r1,#0]
0001ae  4976              LDR      r1,|L1.904|
0001b0  7008              STRB     r0,[r1,#0]
0001b2  4976              LDR      r1,|L1.908|
0001b4  7008              STRB     r0,[r1,#0]
0001b6  e057              B        |L1.616|
                  |L1.440|
;;;67     			else if(uart_receive==0x41)	Flag_Qian=1,Flag_Hou=0,Flag_Left=0,Flag_Right=0;//////////////前
0001b8  486b              LDR      r0,|L1.872|
0001ba  6800              LDR      r0,[r0,#0]  ; uart_receive
0001bc  2841              CMP      r0,#0x41
0001be  d10a              BNE      |L1.470|
0001c0  2001              MOVS     r0,#1
0001c2  496f              LDR      r1,|L1.896|
0001c4  7008              STRB     r0,[r1,#0]
0001c6  2000              MOVS     r0,#0
0001c8  496e              LDR      r1,|L1.900|
0001ca  7008              STRB     r0,[r1,#0]
0001cc  496e              LDR      r1,|L1.904|
0001ce  7008              STRB     r0,[r1,#0]
0001d0  496e              LDR      r1,|L1.908|
0001d2  7008              STRB     r0,[r1,#0]
0001d4  e048              B        |L1.616|
                  |L1.470|
;;;68     			else if(uart_receive==0x45)	Flag_Qian=0,Flag_Hou=1,Flag_Left=0,Flag_Right=0;//////////////后
0001d6  4864              LDR      r0,|L1.872|
0001d8  6800              LDR      r0,[r0,#0]  ; uart_receive
0001da  2845              CMP      r0,#0x45
0001dc  d10c              BNE      |L1.504|
0001de  2000              MOVS     r0,#0
0001e0  4967              LDR      r1,|L1.896|
0001e2  7008              STRB     r0,[r1,#0]
0001e4  2001              MOVS     r0,#1
0001e6  4967              LDR      r1,|L1.900|
0001e8  7008              STRB     r0,[r1,#0]
0001ea  2000              MOVS     r0,#0
0001ec  4966              LDR      r1,|L1.904|
0001ee  7008              STRB     r0,[r1,#0]
0001f0  4966              LDR      r1,|L1.908|
0001f2  7008              STRB     r0,[r1,#0]
0001f4  e038              B        |L1.616|
                  |L1.502|
0001f6  e0a8              B        |L1.842|
                  |L1.504|
;;;69     			else if(uart_receive==0x42||uart_receive==0x43||uart_receive==0x44)	
0001f8  485b              LDR      r0,|L1.872|
0001fa  6800              LDR      r0,[r0,#0]  ; uart_receive
0001fc  2842              CMP      r0,#0x42
0001fe  d007              BEQ      |L1.528|
000200  4859              LDR      r0,|L1.872|
000202  6800              LDR      r0,[r0,#0]  ; uart_receive
000204  2843              CMP      r0,#0x43
000206  d003              BEQ      |L1.528|
000208  4857              LDR      r0,|L1.872|
00020a  6800              LDR      r0,[r0,#0]  ; uart_receive
00020c  2844              CMP      r0,#0x44
00020e  d10a              BNE      |L1.550|
                  |L1.528|
;;;70     														Flag_Qian=0,Flag_Hou=0,Flag_Left=0,Flag_Right=1;  //左
000210  2000              MOVS     r0,#0
000212  495b              LDR      r1,|L1.896|
000214  7008              STRB     r0,[r1,#0]
000216  495b              LDR      r1,|L1.900|
000218  7008              STRB     r0,[r1,#0]
00021a  495b              LDR      r1,|L1.904|
00021c  7008              STRB     r0,[r1,#0]
00021e  2001              MOVS     r0,#1
000220  495a              LDR      r1,|L1.908|
000222  7008              STRB     r0,[r1,#0]
000224  e020              B        |L1.616|
                  |L1.550|
;;;71     			else if(uart_receive==0x46||uart_receive==0x47||uart_receive==0x48)	    //右
000226  4850              LDR      r0,|L1.872|
000228  6800              LDR      r0,[r0,#0]  ; uart_receive
00022a  2846              CMP      r0,#0x46
00022c  d007              BEQ      |L1.574|
00022e  484e              LDR      r0,|L1.872|
000230  6800              LDR      r0,[r0,#0]  ; uart_receive
000232  2847              CMP      r0,#0x47
000234  d003              BEQ      |L1.574|
000236  484c              LDR      r0,|L1.872|
000238  6800              LDR      r0,[r0,#0]  ; uart_receive
00023a  2848              CMP      r0,#0x48
00023c  d10b              BNE      |L1.598|
                  |L1.574|
;;;72     														Flag_Qian=0,Flag_Hou=0,Flag_Left=1,Flag_Right=0;
00023e  2000              MOVS     r0,#0
000240  494f              LDR      r1,|L1.896|
000242  7008              STRB     r0,[r1,#0]
000244  494f              LDR      r1,|L1.900|
000246  7008              STRB     r0,[r1,#0]
000248  2001              MOVS     r0,#1
00024a  494f              LDR      r1,|L1.904|
00024c  7008              STRB     r0,[r1,#0]
00024e  2000              MOVS     r0,#0
000250  494e              LDR      r1,|L1.908|
000252  7008              STRB     r0,[r1,#0]
000254  e008              B        |L1.616|
                  |L1.598|
;;;73     			else Flag_Qian=0,Flag_Hou=0,Flag_Left=0,Flag_Right=0;//////////////刹车
000256  2000              MOVS     r0,#0
000258  4949              LDR      r1,|L1.896|
00025a  7008              STRB     r0,[r1,#0]
00025c  4949              LDR      r1,|L1.900|
00025e  7008              STRB     r0,[r1,#0]
000260  4949              LDR      r1,|L1.904|
000262  7008              STRB     r0,[r1,#0]
000264  4949              LDR      r1,|L1.908|
000266  7008              STRB     r0,[r1,#0]
                  |L1.616|
;;;74       	}
;;;75     		if(uart_receive<10)     //备用app为：MiniBalanceV1.0  因为MiniBalanceV1.0的遥控指令为A~H 其HEX都小于10
000268  483f              LDR      r0,|L1.872|
00026a  6800              LDR      r0,[r0,#0]  ; uart_receive
00026c  280a              CMP      r0,#0xa
00026e  da65              BGE      |L1.828|
;;;76     		{			
;;;77     			Flag_sudu=1;//切换至高速档
000270  2001              MOVS     r0,#1
000272  4942              LDR      r1,|L1.892|
000274  7008              STRB     r0,[r1,#0]
;;;78     			if(uart_receive==0x00)	Flag_Qian=0,Flag_Hou=0,Flag_Left=0,Flag_Right=0;//////////////刹车
000276  483c              LDR      r0,|L1.872|
000278  6800              LDR      r0,[r0,#0]  ; uart_receive
00027a  b948              CBNZ     r0,|L1.656|
00027c  2000              MOVS     r0,#0
00027e  4940              LDR      r1,|L1.896|
000280  7008              STRB     r0,[r1,#0]
000282  4940              LDR      r1,|L1.900|
000284  7008              STRB     r0,[r1,#0]
000286  4940              LDR      r1,|L1.904|
000288  7008              STRB     r0,[r1,#0]
00028a  4940              LDR      r1,|L1.908|
00028c  7008              STRB     r0,[r1,#0]
00028e  e055              B        |L1.828|
                  |L1.656|
;;;79     			else if(uart_receive==0x01)	Flag_Qian=1,Flag_Hou=0,Flag_Left=0,Flag_Right=0;//////////////前
000290  4835              LDR      r0,|L1.872|
000292  6800              LDR      r0,[r0,#0]  ; uart_receive
000294  2801              CMP      r0,#1
000296  d109              BNE      |L1.684|
000298  4939              LDR      r1,|L1.896|
00029a  7008              STRB     r0,[r1,#0]
00029c  2000              MOVS     r0,#0
00029e  4939              LDR      r1,|L1.900|
0002a0  7008              STRB     r0,[r1,#0]
0002a2  4939              LDR      r1,|L1.904|
0002a4  7008              STRB     r0,[r1,#0]
0002a6  4939              LDR      r1,|L1.908|
0002a8  7008              STRB     r0,[r1,#0]
0002aa  e047              B        |L1.828|
                  |L1.684|
;;;80     			else if(uart_receive==0x05)	Flag_Qian=0,Flag_Hou=1,Flag_Left=0,Flag_Right=0;//////////////后
0002ac  482e              LDR      r0,|L1.872|
0002ae  6800              LDR      r0,[r0,#0]  ; uart_receive
0002b0  2805              CMP      r0,#5
0002b2  d10b              BNE      |L1.716|
0002b4  2000              MOVS     r0,#0
0002b6  4932              LDR      r1,|L1.896|
0002b8  7008              STRB     r0,[r1,#0]
0002ba  2001              MOVS     r0,#1
0002bc  4931              LDR      r1,|L1.900|
0002be  7008              STRB     r0,[r1,#0]
0002c0  2000              MOVS     r0,#0
0002c2  4931              LDR      r1,|L1.904|
0002c4  7008              STRB     r0,[r1,#0]
0002c6  4931              LDR      r1,|L1.908|
0002c8  7008              STRB     r0,[r1,#0]
0002ca  e037              B        |L1.828|
                  |L1.716|
;;;81     			else if(uart_receive==0x02||uart_receive==0x03||uart_receive==0x04)	
0002cc  4826              LDR      r0,|L1.872|
0002ce  6800              LDR      r0,[r0,#0]  ; uart_receive
0002d0  2802              CMP      r0,#2
0002d2  d007              BEQ      |L1.740|
0002d4  4824              LDR      r0,|L1.872|
0002d6  6800              LDR      r0,[r0,#0]  ; uart_receive
0002d8  2803              CMP      r0,#3
0002da  d003              BEQ      |L1.740|
0002dc  4822              LDR      r0,|L1.872|
0002de  6800              LDR      r0,[r0,#0]  ; uart_receive
0002e0  2804              CMP      r0,#4
0002e2  d10a              BNE      |L1.762|
                  |L1.740|
;;;82     														Flag_Qian=0,Flag_Hou=0,Flag_Left=0,Flag_Right=1;  //左
0002e4  2000              MOVS     r0,#0
0002e6  4926              LDR      r1,|L1.896|
0002e8  7008              STRB     r0,[r1,#0]
0002ea  4926              LDR      r1,|L1.900|
0002ec  7008              STRB     r0,[r1,#0]
0002ee  4926              LDR      r1,|L1.904|
0002f0  7008              STRB     r0,[r1,#0]
0002f2  2001              MOVS     r0,#1
0002f4  4925              LDR      r1,|L1.908|
0002f6  7008              STRB     r0,[r1,#0]
0002f8  e020              B        |L1.828|
                  |L1.762|
;;;83     			else if(uart_receive==0x06||uart_receive==0x07||uart_receive==0x08)	    //右
0002fa  481b              LDR      r0,|L1.872|
0002fc  6800              LDR      r0,[r0,#0]  ; uart_receive
0002fe  2806              CMP      r0,#6
000300  d007              BEQ      |L1.786|
000302  4819              LDR      r0,|L1.872|
000304  6800              LDR      r0,[r0,#0]  ; uart_receive
000306  2807              CMP      r0,#7
000308  d003              BEQ      |L1.786|
00030a  4817              LDR      r0,|L1.872|
00030c  6800              LDR      r0,[r0,#0]  ; uart_receive
00030e  2808              CMP      r0,#8
000310  d10b              BNE      |L1.810|
                  |L1.786|
;;;84     														Flag_Qian=0,Flag_Hou=0,Flag_Left=1,Flag_Right=0;
000312  2000              MOVS     r0,#0
000314  491a              LDR      r1,|L1.896|
000316  7008              STRB     r0,[r1,#0]
000318  491a              LDR      r1,|L1.900|
00031a  7008              STRB     r0,[r1,#0]
00031c  2001              MOVS     r0,#1
00031e  491a              LDR      r1,|L1.904|
000320  7008              STRB     r0,[r1,#0]
000322  2000              MOVS     r0,#0
000324  4919              LDR      r1,|L1.908|
000326  7008              STRB     r0,[r1,#0]
000328  e008              B        |L1.828|
                  |L1.810|
;;;85     			else Flag_Qian=0,Flag_Hou=0,Flag_Left=0,Flag_Right=0;//////////////刹车
00032a  2000              MOVS     r0,#0
00032c  4914              LDR      r1,|L1.896|
00032e  7008              STRB     r0,[r1,#0]
000330  4914              LDR      r1,|L1.900|
000332  7008              STRB     r0,[r1,#0]
000334  4914              LDR      r1,|L1.904|
000336  7008              STRB     r0,[r1,#0]
000338  4914              LDR      r1,|L1.908|
00033a  7008              STRB     r0,[r1,#0]
                  |L1.828|
;;;86       	}	
;;;87     		mode_data[2]=mode_data[1];
00033c  480b              LDR      r0,|L1.876|
00033e  7840              LDRB     r0,[r0,#1]  ; mode_data
000340  490a              LDR      r1,|L1.876|
000342  7088              STRB     r0,[r1,#2]
;;;88     		mode_data[1]=mode_data[0];
000344  4608              MOV      r0,r1
000346  7800              LDRB     r0,[r0,#0]  ; mode_data
000348  7048              STRB     r0,[r1,#1]
                  |L1.842|
;;;89     	}  											 
;;;90     } 
00034a  4770              BX       lr
;;;91     
                          ENDP

                  |L1.844|
                          DCD      0x000f4240
                  |L1.848|
                          DCD      0x40021000
                  |L1.852|
                          DCD      0x40010c04
                  |L1.856|
                          DCD      0x40010000
                  |L1.860|
                          DCD      0x4000480c
                  |L1.864|
                          DCD      0x40004800
                  |L1.868|
                          DCD      0x40004804
                  |L1.872|
                          DCD      uart_receive
                  |L1.876|
                          DCD      mode_data
                  |L1.880|
                          DCD      six_data_start
                  |L1.884|
                          DCD      Flag_Stop
                  |L1.888|
                          DCD      six_data_stop
                  |L1.892|
                          DCD      Flag_sudu
                  |L1.896|
                          DCD      Flag_Qian
                  |L1.900|
                          DCD      Flag_Hou
                  |L1.904|
                          DCD      Flag_Left
                  |L1.908|
                          DCD      Flag_Right

                          AREA ||.data||, DATA, ALIGN=2

                  six_data_stop
000000  595959            DCB      0x59,0x59,0x59
                  six_data_start
000003  58                DCB      0x58
000004  58580000          DCB      0x58,0x58,0x00,0x00
                  uart_receive
                          DCD      0x00000000
                  Usart3_Receive
00000c  00                DCB      0x00
                  mode_data
00000d  000000            DCB      0x00,0x00,0x00
                          DCD      0x00000000
000014  00                DCB      0x00

; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\motor.o --depend=..\OBJ\motor.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\OLED -I..\HARDWARE\ADC -I..\HARDWARE\TIMER -I..\HARDWARE\MOTOR -I..\BALANCE\CONTROL -I..\HARDWARE\ENCODER -I..\HARDWARE\IIC -I..\BALANCE\CONTROL -I..\BALANCE\DMP -I..\BALANCE\filter -I..\BALANCE\MPU6050 -I..\BALANCE\show -I..\BALANCE\controls -I..\HARDWARE\USART3 -I..\HARDWARE\EXTI -I..\HARDWARE\DataScope_DP -I"H:\KEIL MDK4\ARM\INC" -I"H:\KEIL MDK4\ARM\INC\STMicroelectronics" -DSTM32F10X_MD --omf_browse=..\OBJ\motor.crf ..\HARDWARE\MOTOR\motor.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  MiniBalance_Motor_Init PROC
;;;5      **************************************************************************/
;;;6      void MiniBalance_Motor_Init(void)
000000  483c              LDR      r0,|L1.244|
;;;7      {
;;;8      	RCC->APB2ENR|=1<<3;       //PORTB时钟使能   
000002  6980              LDR      r0,[r0,#0x18]
000004  f0400008          ORR      r0,r0,#8
000008  493a              LDR      r1,|L1.244|
00000a  6188              STR      r0,[r1,#0x18]
;;;9      	GPIOB->CRH&=0X0000FFFF;   //PORTB12 13 14 15推挽输出
00000c  483a              LDR      r0,|L1.248|
00000e  6800              LDR      r0,[r0,#0]
000010  b280              UXTH     r0,r0
000012  493a              LDR      r1,|L1.252|
000014  f8c10c04          STR      r0,[r1,#0xc04]
;;;10     	GPIOB->CRH|=0X22220000;   //PORTB12 13 14 15推挽输出
000018  4837              LDR      r0,|L1.248|
00001a  6800              LDR      r0,[r0,#0]
00001c  4938              LDR      r1,|L1.256|
00001e  ea400001          ORR      r0,r0,r1
000022  4936              LDR      r1,|L1.252|
000024  f8c10c04          STR      r0,[r1,#0xc04]
;;;11     }
000028  4770              BX       lr
;;;12     void MiniBalance_PWM_Init(u16 arr,u16 psc)
                          ENDP

                  MiniBalance_PWM_Init PROC
00002a  b500              PUSH     {lr}
;;;13     {		 					 
00002c  4602              MOV      r2,r0
00002e  460b              MOV      r3,r1
;;;14     	MiniBalance_Motor_Init();  //初始化电机控制所需IO
000030  f7fffffe          BL       MiniBalance_Motor_Init
;;;15     	RCC->APB2ENR|=1<<11;       //使能TIM1时钟    
000034  482f              LDR      r0,|L1.244|
000036  6980              LDR      r0,[r0,#0x18]
000038  f4406000          ORR      r0,r0,#0x800
00003c  492d              LDR      r1,|L1.244|
00003e  6188              STR      r0,[r1,#0x18]
;;;16     	RCC->APB2ENR|=1<<2;        //PORTA时钟使能     
000040  4608              MOV      r0,r1
000042  6980              LDR      r0,[r0,#0x18]
000044  f0400004          ORR      r0,r0,#4
000048  6188              STR      r0,[r1,#0x18]
;;;17     	GPIOA->CRH&=0XFFFF0FF0;    //PORTA8 11复用输出
00004a  482e              LDR      r0,|L1.260|
00004c  6800              LDR      r0,[r0,#0]
00004e  f24f010f          MOV      r1,#0xf00f
000052  ea200001          BIC      r0,r0,r1
000056  4929              LDR      r1,|L1.252|
000058  f8c10804          STR      r0,[r1,#0x804]
;;;18     	GPIOA->CRH|=0X0000B00B;    //PORTA8 11复用输出
00005c  4829              LDR      r0,|L1.260|
00005e  6800              LDR      r0,[r0,#0]
000060  f24b010b          MOV      r1,#0xb00b
000064  ea400001          ORR      r0,r0,r1
000068  4924              LDR      r1,|L1.252|
00006a  f8c10804          STR      r0,[r1,#0x804]
;;;19     	TIM1->ARR=arr;             //设定计数器自动重装值 
00006e  4826              LDR      r0,|L1.264|
000070  f8a02c2c          STRH     r2,[r0,#0xc2c]
;;;20     	TIM1->PSC=psc;             //预分频器不分频
000074  f8a03c28          STRH     r3,[r0,#0xc28]
;;;21     	TIM1->CCMR2|=6<<12;        //CH4 PWM1模式	
000078  f8b00c1c          LDRH     r0,[r0,#0xc1c]
00007c  f44040c0          ORR      r0,r0,#0x6000
000080  4921              LDR      r1,|L1.264|
000082  f8a10c1c          STRH     r0,[r1,#0xc1c]
;;;22     	TIM1->CCMR1|=6<<4;         //CH1 PWM1模式	
000086  4608              MOV      r0,r1
000088  f8b00c18          LDRH     r0,[r0,#0xc18]
00008c  f0400060          ORR      r0,r0,#0x60
000090  f8a10c18          STRH     r0,[r1,#0xc18]
;;;23     	TIM1->CCMR2|=1<<11;        //CH4预装载使能	 
000094  4608              MOV      r0,r1
000096  f8b00c1c          LDRH     r0,[r0,#0xc1c]
00009a  f4406000          ORR      r0,r0,#0x800
00009e  f8a10c1c          STRH     r0,[r1,#0xc1c]
;;;24     	TIM1->CCMR1|=1<<3;         //CH1预装载使能	  
0000a2  4608              MOV      r0,r1
0000a4  f8b00c18          LDRH     r0,[r0,#0xc18]
0000a8  f0400008          ORR      r0,r0,#8
0000ac  f8a10c18          STRH     r0,[r1,#0xc18]
;;;25     	TIM1->CCER|=1<<12;         //CH4输出使能	   
0000b0  4608              MOV      r0,r1
0000b2  f8b00c20          LDRH     r0,[r0,#0xc20]
0000b6  f4405080          ORR      r0,r0,#0x1000
0000ba  f8a10c20          STRH     r0,[r1,#0xc20]
;;;26     	TIM1->CCER|=1<<0;          //CH1输出使能	
0000be  4608              MOV      r0,r1
0000c0  f8b00c20          LDRH     r0,[r0,#0xc20]
0000c4  f0400001          ORR      r0,r0,#1
0000c8  f8a10c20          STRH     r0,[r1,#0xc20]
;;;27     	TIM1->BDTR |= 1<<15;       //TIM1必须要这句话才能输出PWM
0000cc  4608              MOV      r0,r1
0000ce  f8b00c44          LDRH     r0,[r0,#0xc44]
0000d2  f4404000          ORR      r0,r0,#0x8000
0000d6  490d              LDR      r1,|L1.268|
0000d8  8008              STRH     r0,[r1,#0]
;;;28     	TIM1->CR1=0x8000;          //ARPE使能 
0000da  f44f4000          MOV      r0,#0x8000
0000de  490a              LDR      r1,|L1.264|
0000e0  f8a10c00          STRH     r0,[r1,#0xc00]
;;;29     	TIM1->CR1|=0x01;          //使能定时器1 			
0000e4  4608              MOV      r0,r1
0000e6  f8b00c00          LDRH     r0,[r0,#0xc00]
0000ea  f0400001          ORR      r0,r0,#1
0000ee  4908              LDR      r1,|L1.272|
0000f0  8008              STRH     r0,[r1,#0]
;;;30     } 
0000f2  bd00              POP      {pc}
;;;31     
                          ENDP

                  |L1.244|
                          DCD      0x40021000
                  |L1.248|
                          DCD      0x40010c04
                  |L1.252|
                          DCD      0x40010000
                  |L1.256|
                          DCD      0x22220000
                  |L1.260|
                          DCD      0x40010804
                  |L1.264|
                          DCD      0x40012000
                  |L1.268|
                          DCD      0x40012c44
                  |L1.272|
                          DCD      0x40012c00

; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\show.o --depend=..\OBJ\show.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\OLED -I..\HARDWARE\ADC -I..\HARDWARE\TIMER -I..\HARDWARE\MOTOR -I..\BALANCE\CONTROL -I..\HARDWARE\ENCODER -I..\HARDWARE\IIC -I..\BALANCE\CONTROL -I..\BALANCE\DMP -I..\BALANCE\filter -I..\BALANCE\MPU6050 -I..\BALANCE\show -I..\BALANCE\controls -I..\HARDWARE\USART3 -I..\HARDWARE\EXTI -I..\HARDWARE\DataScope_DP -I"H:\KEIL MDK4\ARM\INC" -I"H:\KEIL MDK4\ARM\INC\STMicroelectronics" -DSTM32F10X_MD --omf_browse=..\OBJ\show.crf ..\BALANCE\show\show.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  oled_show PROC
;;;13     **************************************************************************/
;;;14     void oled_show(void)
000000  b538              PUSH     {r3-r5,lr}
;;;15     {
;;;16     		//=============第一行显示小车模式=======================//	
;;;17     		     if(Way_Angle==1)	OLED_ShowString(0,0,"DMP");
000002  48d1              LDR      r0,|L1.840|
000004  7800              LDRB     r0,[r0,#0]  ; Way_Angle
000006  2801              CMP      r0,#1
000008  d105              BNE      |L1.22|
00000a  a2d0              ADR      r2,|L1.844|
00000c  2100              MOVS     r1,#0
00000e  4608              MOV      r0,r1
000010  f7fffffe          BL       OLED_ShowString
000014  e012              B        |L1.60|
                  |L1.22|
;;;18     		else if(Way_Angle==2)	OLED_ShowString(0,0,"Kalman");
000016  48cc              LDR      r0,|L1.840|
000018  7800              LDRB     r0,[r0,#0]  ; Way_Angle
00001a  2802              CMP      r0,#2
00001c  d105              BNE      |L1.42|
00001e  a2cc              ADR      r2,|L1.848|
000020  2100              MOVS     r1,#0
000022  4608              MOV      r0,r1
000024  f7fffffe          BL       OLED_ShowString
000028  e008              B        |L1.60|
                  |L1.42|
;;;19     		else if(Way_Angle==3)	OLED_ShowString(0,0,"Hubu");
00002a  48c7              LDR      r0,|L1.840|
00002c  7800              LDRB     r0,[r0,#0]  ; Way_Angle
00002e  2803              CMP      r0,#3
000030  d104              BNE      |L1.60|
000032  a2c9              ADR      r2,|L1.856|
000034  2100              MOVS     r1,#0
000036  4608              MOV      r0,r1
000038  f7fffffe          BL       OLED_ShowString
                  |L1.60|
;;;20                        
;;;21     	       if(Bi_zhang==1)	OLED_ShowString(60,0,"Bizhang");
00003c  48c8              LDR      r0,|L1.864|
00003e  7800              LDRB     r0,[r0,#0]  ; Bi_zhang
000040  2801              CMP      r0,#1
000042  d105              BNE      |L1.80|
000044  a2c7              ADR      r2,|L1.868|
000046  2100              MOVS     r1,#0
000048  203c              MOVS     r0,#0x3c
00004a  f7fffffe          BL       OLED_ShowString
00004e  e004              B        |L1.90|
                  |L1.80|
;;;22     		     else             OLED_ShowString(60,0,"Putong");
000050  a2c6              ADR      r2,|L1.876|
000052  2100              MOVS     r1,#0
000054  203c              MOVS     r0,#0x3c
000056  f7fffffe          BL       OLED_ShowString
                  |L1.90|
;;;23     	  //=============第二行显示温度和距离===============//	
;;;24     													OLED_ShowNumber(0,10,Temperature/10,2,12);
00005a  48c6              LDR      r0,|L1.884|
00005c  6800              LDR      r0,[r0,#0]  ; Temperature
00005e  210a              MOVS     r1,#0xa
000060  fb90f4f1          SDIV     r4,r0,r1
000064  230c              MOVS     r3,#0xc
000066  9300              STR      r3,[sp,#0]
000068  2302              MOVS     r3,#2
00006a  4622              MOV      r2,r4
00006c  2000              MOVS     r0,#0
00006e  f7fffffe          BL       OLED_ShowNumber
;;;25     													OLED_ShowNumber(23,10,Temperature%10,1,12);
000072  48c0              LDR      r0,|L1.884|
000074  6800              LDR      r0,[r0,#0]  ; Temperature
000076  210a              MOVS     r1,#0xa
000078  fb90f2f1          SDIV     r2,r0,r1
00007c  fb010412          MLS      r4,r1,r2,r0
000080  230c              MOVS     r3,#0xc
000082  9300              STR      r3,[sp,#0]
000084  2301              MOVS     r3,#1
000086  4622              MOV      r2,r4
000088  2017              MOVS     r0,#0x17
00008a  f7fffffe          BL       OLED_ShowNumber
;;;26     													OLED_ShowString(13,10,".");
00008e  a2ba              ADR      r2,|L1.888|
000090  210a              MOVS     r1,#0xa
000092  200d              MOVS     r0,#0xd
000094  f7fffffe          BL       OLED_ShowString
;;;27     													OLED_ShowString(35,10,"`C");
000098  a2b8              ADR      r2,|L1.892|
00009a  210a              MOVS     r1,#0xa
00009c  2023              MOVS     r0,#0x23
00009e  f7fffffe          BL       OLED_ShowString
;;;28     													OLED_ShowNumber(70,10,(u16)Distance,5,12);
0000a2  230c              MOVS     r3,#0xc
0000a4  9300              STR      r3,[sp,#0]
0000a6  2305              MOVS     r3,#5
0000a8  48b5              LDR      r0,|L1.896|
0000aa  6800              LDR      r0,[r0,#0]  ; Distance
0000ac  b282              UXTH     r2,r0
0000ae  210a              MOVS     r1,#0xa
0000b0  2046              MOVS     r0,#0x46
0000b2  f7fffffe          BL       OLED_ShowNumber
;;;29     			                    OLED_ShowString(105,10,"mm");
0000b6  a2b3              ADR      r2,|L1.900|
0000b8  210a              MOVS     r1,#0xa
0000ba  2069              MOVS     r0,#0x69
0000bc  f7fffffe          BL       OLED_ShowString
;;;30     		//=============第三行显示编码器1=======================//	
;;;31     		                      OLED_ShowString(00,20,"EncoLEFT");
0000c0  a2b1              ADR      r2,|L1.904|
0000c2  2114              MOVS     r1,#0x14
0000c4  2000              MOVS     r0,#0
0000c6  f7fffffe          BL       OLED_ShowString
;;;32     		if( Encoder_Left<0)		OLED_ShowString(80,20,"-"),
0000ca  48b2              LDR      r0,|L1.916|
0000cc  6800              LDR      r0,[r0,#0]  ; Encoder_Left
0000ce  2800              CMP      r0,#0
0000d0  da0f              BGE      |L1.242|
0000d2  a2b1              ADR      r2,|L1.920|
0000d4  2114              MOVS     r1,#0x14
0000d6  2050              MOVS     r0,#0x50
0000d8  f7fffffe          BL       OLED_ShowString
;;;33     		                      OLED_ShowNumber(95,20,-Encoder_Left,3,12);
0000dc  230c              MOVS     r3,#0xc
0000de  9300              STR      r3,[sp,#0]
0000e0  2303              MOVS     r3,#3
0000e2  48ac              LDR      r0,|L1.916|
0000e4  6800              LDR      r0,[r0,#0]  ; Encoder_Left
0000e6  4242              RSBS     r2,r0,#0
0000e8  2114              MOVS     r1,#0x14
0000ea  205f              MOVS     r0,#0x5f
0000ec  f7fffffe          BL       OLED_ShowNumber
0000f0  e00d              B        |L1.270|
                  |L1.242|
;;;34     		else                 	OLED_ShowString(80,20,"+"),
0000f2  a2aa              ADR      r2,|L1.924|
0000f4  2114              MOVS     r1,#0x14
0000f6  2050              MOVS     r0,#0x50
0000f8  f7fffffe          BL       OLED_ShowString
;;;35     		                      OLED_ShowNumber(95,20, Encoder_Left,3,12);
0000fc  230c              MOVS     r3,#0xc
0000fe  9300              STR      r3,[sp,#0]
000100  2303              MOVS     r3,#3
000102  48a4              LDR      r0,|L1.916|
000104  2114              MOVS     r1,#0x14
000106  6802              LDR      r2,[r0,#0]  ; Encoder_Left
000108  205f              MOVS     r0,#0x5f
00010a  f7fffffe          BL       OLED_ShowNumber
                  |L1.270|
;;;36       	//=============第四行显示编码器2=======================//		
;;;37     		                      OLED_ShowString(00,30,"EncoRIGHT");
00010e  a2a4              ADR      r2,|L1.928|
000110  211e              MOVS     r1,#0x1e
000112  2000              MOVS     r0,#0
000114  f7fffffe          BL       OLED_ShowString
;;;38     		if(Encoder_Right<0)		OLED_ShowString(80,30,"-"),
000118  48a4              LDR      r0,|L1.940|
00011a  6800              LDR      r0,[r0,#0]  ; Encoder_Right
00011c  2800              CMP      r0,#0
00011e  da0f              BGE      |L1.320|
000120  a29d              ADR      r2,|L1.920|
000122  211e              MOVS     r1,#0x1e
000124  2050              MOVS     r0,#0x50
000126  f7fffffe          BL       OLED_ShowString
;;;39     		                      OLED_ShowNumber(95,30,-Encoder_Right,3,12);
00012a  230c              MOVS     r3,#0xc
00012c  9300              STR      r3,[sp,#0]
00012e  2303              MOVS     r3,#3
000130  489e              LDR      r0,|L1.940|
000132  6800              LDR      r0,[r0,#0]  ; Encoder_Right
000134  4242              RSBS     r2,r0,#0
000136  211e              MOVS     r1,#0x1e
000138  205f              MOVS     r0,#0x5f
00013a  f7fffffe          BL       OLED_ShowNumber
00013e  e00d              B        |L1.348|
                  |L1.320|
;;;40     		else               		OLED_ShowString(80,30,"+"),
000140  a296              ADR      r2,|L1.924|
000142  211e              MOVS     r1,#0x1e
000144  2050              MOVS     r0,#0x50
000146  f7fffffe          BL       OLED_ShowString
;;;41     		                      OLED_ShowNumber(95,30,Encoder_Right,3,12);	
00014a  230c              MOVS     r3,#0xc
00014c  9300              STR      r3,[sp,#0]
00014e  2303              MOVS     r3,#3
000150  4896              LDR      r0,|L1.940|
000152  211e              MOVS     r1,#0x1e
000154  6802              LDR      r2,[r0,#0]  ; Encoder_Right
000156  205f              MOVS     r0,#0x5f
000158  f7fffffe          BL       OLED_ShowNumber
                  |L1.348|
;;;42     		//=============第五行显示电压=======================//
;;;43     		                      OLED_ShowString(00,40,"Volta");
00015c  a294              ADR      r2,|L1.944|
00015e  2128              MOVS     r1,#0x28
000160  2000              MOVS     r0,#0
000162  f7fffffe          BL       OLED_ShowString
;;;44     		                      OLED_ShowString(58,40,".");
000166  a284              ADR      r2,|L1.888|
000168  2128              MOVS     r1,#0x28
00016a  203a              MOVS     r0,#0x3a
00016c  f7fffffe          BL       OLED_ShowString
;;;45     		                      OLED_ShowString(80,40,"V");
000170  a291              ADR      r2,|L1.952|
000172  2128              MOVS     r1,#0x28
000174  2050              MOVS     r0,#0x50
000176  f7fffffe          BL       OLED_ShowString
;;;46     		                      OLED_ShowNumber(45,40,Voltage/100,2,12);
00017a  4890              LDR      r0,|L1.956|
00017c  6800              LDR      r0,[r0,#0]  ; Voltage
00017e  2164              MOVS     r1,#0x64
000180  fb90f4f1          SDIV     r4,r0,r1
000184  230c              MOVS     r3,#0xc
000186  9300              STR      r3,[sp,#0]
000188  2302              MOVS     r3,#2
00018a  4622              MOV      r2,r4
00018c  2128              MOVS     r1,#0x28
00018e  202d              MOVS     r0,#0x2d
000190  f7fffffe          BL       OLED_ShowNumber
;;;47     		                      OLED_ShowNumber(68,40,Voltage%100,2,12);
000194  4889              LDR      r0,|L1.956|
000196  6800              LDR      r0,[r0,#0]  ; Voltage
000198  2164              MOVS     r1,#0x64
00019a  fb90f2f1          SDIV     r2,r0,r1
00019e  fb010412          MLS      r4,r1,r2,r0
0001a2  230c              MOVS     r3,#0xc
0001a4  9300              STR      r3,[sp,#0]
0001a6  2302              MOVS     r3,#2
0001a8  4622              MOV      r2,r4
0001aa  2128              MOVS     r1,#0x28
0001ac  2044              MOVS     r0,#0x44
0001ae  f7fffffe          BL       OLED_ShowNumber
;;;48     		 if(Voltage%100<10) 	OLED_ShowNumber(62,40,0,2,12);
0001b2  4882              LDR      r0,|L1.956|
0001b4  6800              LDR      r0,[r0,#0]  ; Voltage
0001b6  2164              MOVS     r1,#0x64
0001b8  fb90f2f1          SDIV     r2,r0,r1
0001bc  fb010012          MLS      r0,r1,r2,r0
0001c0  280a              CMP      r0,#0xa
0001c2  da07              BGE      |L1.468|
0001c4  230c              MOVS     r3,#0xc
0001c6  9300              STR      r3,[sp,#0]
0001c8  2302              MOVS     r3,#2
0001ca  2200              MOVS     r2,#0
0001cc  2128              MOVS     r1,#0x28
0001ce  203e              MOVS     r0,#0x3e
0001d0  f7fffffe          BL       OLED_ShowNumber
                  |L1.468|
;;;49     		//=============第六行显示角度=======================//
;;;50     		                      OLED_ShowString(0,50,"Angle");
0001d4  a27a              ADR      r2,|L1.960|
0001d6  2132              MOVS     r1,#0x32
0001d8  2000              MOVS     r0,#0
0001da  f7fffffe          BL       OLED_ShowString
;;;51     		if(Angle_Balance<0)		OLED_ShowNumber(45,50,Angle_Balance+360,3,12);
0001de  2100              MOVS     r1,#0
0001e0  4879              LDR      r0,|L1.968|
0001e2  6800              LDR      r0,[r0,#0]  ; Angle_Balance
0001e4  f7fffffe          BL       __aeabi_cfcmple
0001e8  d211              BCS      |L1.526|
0001ea  4978              LDR      r1,|L1.972|
0001ec  4876              LDR      r0,|L1.968|
0001ee  6800              LDR      r0,[r0,#0]  ; Angle_Balance
0001f0  f7fffffe          BL       __aeabi_fadd
0001f4  4605              MOV      r5,r0
0001f6  f7fffffe          BL       __aeabi_f2uiz
0001fa  4604              MOV      r4,r0
0001fc  230c              MOVS     r3,#0xc
0001fe  9300              STR      r3,[sp,#0]
000200  2303              MOVS     r3,#3
000202  4602              MOV      r2,r0
000204  2132              MOVS     r1,#0x32
000206  202d              MOVS     r0,#0x2d
000208  f7fffffe          BL       OLED_ShowNumber
00020c  e00c              B        |L1.552|
                  |L1.526|
;;;52     		else					        OLED_ShowNumber(45,50,Angle_Balance,3,12);
00020e  486e              LDR      r0,|L1.968|
000210  6800              LDR      r0,[r0,#0]  ; Angle_Balance
000212  f7fffffe          BL       __aeabi_f2uiz
000216  4604              MOV      r4,r0
000218  230c              MOVS     r3,#0xc
00021a  9300              STR      r3,[sp,#0]
00021c  2303              MOVS     r3,#3
00021e  4602              MOV      r2,r0
000220  2132              MOVS     r1,#0x32
000222  202d              MOVS     r0,#0x2d
000224  f7fffffe          BL       OLED_ShowNumber
                  |L1.552|
;;;53     		//=============刷新=======================//
;;;54     		OLED_Refresh_Gram();	
000228  f7fffffe          BL       OLED_Refresh_Gram
;;;55     	}
00022c  bd38              POP      {r3-r5,pc}
;;;56     /**************************************************************************
                          ENDP

                  APP_Show PROC
;;;61     **************************************************************************/
;;;62     void APP_Show(void)
00022e  e92d4ff8          PUSH     {r3-r11,lr}
;;;63     {    
;;;64     	  int app_2,app_3,app_4;
;;;65     		app_4=(Voltage-1110)*2/3;		if(app_4<0)app_4=0;if(app_4>100)app_4=100;   //对电压数据进行处理
000232  4862              LDR      r0,|L1.956|
000234  6800              LDR      r0,[r0,#0]  ; Voltage
000236  f2a04056          SUB      r0,r0,#0x456
00023a  0040              LSLS     r0,r0,#1
00023c  2103              MOVS     r1,#3
00023e  fb90faf1          SDIV     r10,r0,r1
000242  f1ba0f00          CMP      r10,#0
000246  da01              BGE      |L1.588|
000248  f04f0a00          MOV      r10,#0
                  |L1.588|
00024c  f1ba0f64          CMP      r10,#0x64
000250  dd01              BLE      |L1.598|
000252  f04f0a64          MOV      r10,#0x64
                  |L1.598|
;;;66     		app_3=Encoder_Right*1.1; if(app_3<0)app_3=-app_3;			                   //对编码器数据就行数据处理便于图形化
000256  4855              LDR      r0,|L1.940|
000258  6800              LDR      r0,[r0,#0]  ; Encoder_Right
00025a  f7fffffe          BL       __aeabi_i2d
00025e  4606              MOV      r6,r0
000260  4a5b              LDR      r2,|L1.976|
000262  4b5c              LDR      r3,|L1.980|
000264  f7fffffe          BL       __aeabi_dmul
000268  4604              MOV      r4,r0
00026a  f7fffffe          BL       __aeabi_d2iz
00026e  4681              MOV      r9,r0
000270  f1b90f00          CMP      r9,#0
000274  da01              BGE      |L1.634|
000276  f1c90900          RSB      r9,r9,#0
                  |L1.634|
;;;67     		app_2=Encoder_Left*1.1;  if(app_2<0)app_2=-app_2;
00027a  4846              LDR      r0,|L1.916|
00027c  6800              LDR      r0,[r0,#0]  ; Encoder_Left
00027e  f7fffffe          BL       __aeabi_i2d
000282  4604              MOV      r4,r0
000284  4a52              LDR      r2,|L1.976|
000286  4b53              LDR      r3,|L1.980|
000288  f7fffffe          BL       __aeabi_dmul
00028c  4606              MOV      r6,r0
00028e  f7fffffe          BL       __aeabi_d2iz
000292  4680              MOV      r8,r0
000294  f1b80f00          CMP      r8,#0
000298  da01              BGE      |L1.670|
00029a  f1c80800          RSB      r8,r8,#0
                  |L1.670|
;;;68     		printf("Z%d:%d:%d:%dL$",(u8)app_2,(u8)app_3,(u8)app_4,(int)Angle_Balance);//打印到APP上面
00029e  484a              LDR      r0,|L1.968|
0002a0  6800              LDR      r0,[r0,#0]  ; Angle_Balance
0002a2  f7fffffe          BL       __aeabi_f2iz
0002a6  4604              MOV      r4,r0
0002a8  f00a03ff          AND      r3,r10,#0xff
0002ac  f00902ff          AND      r2,r9,#0xff
0002b0  f00801ff          AND      r1,r8,#0xff
0002b4  9000              STR      r0,[sp,#0]
0002b6  a048              ADR      r0,|L1.984|
0002b8  f7fffffe          BL       __2printf
;;;69     }
0002bc  e8bd8ff8          POP      {r3-r11,pc}
;;;70     /**************************************************************************
                          ENDP

                  DataScope PROC
;;;75     **************************************************************************/
;;;76     void DataScope(void)
0002c0  b570              PUSH     {r4-r6,lr}
;;;77     {   
;;;78         Vol=(float)Voltage/100;
0002c2  483e              LDR      r0,|L1.956|
0002c4  6800              LDR      r0,[r0,#0]  ; Voltage
0002c6  f7fffffe          BL       __aeabi_i2f
0002ca  4604              MOV      r4,r0
0002cc  4946              LDR      r1,|L1.1000|
0002ce  f7fffffe          BL       __aeabi_fdiv
0002d2  4946              LDR      r1,|L1.1004|
0002d4  6008              STR      r0,[r1,#0]  ; Vol
;;;79     		DataScope_Get_Channel_Data( Angle_Balance, 1 );       //显示角度 单位：度（°）
0002d6  2101              MOVS     r1,#1
0002d8  483b              LDR      r0,|L1.968|
0002da  6800              LDR      r0,[r0,#0]  ; Angle_Balance
0002dc  f7fffffe          BL       DataScope_Get_Channel_Data
;;;80     		DataScope_Get_Channel_Data( Distance/10, 2 );         //显示超声波测量的距离 单位：CM 
0002e0  4827              LDR      r0,|L1.896|
0002e2  6800              LDR      r0,[r0,#0]  ; Distance
0002e4  210a              MOVS     r1,#0xa
0002e6  fbb0f5f1          UDIV     r5,r0,r1
0002ea  4628              MOV      r0,r5
0002ec  f7fffffe          BL       __aeabi_ui2f
0002f0  4604              MOV      r4,r0
0002f2  2102              MOVS     r1,#2
0002f4  f7fffffe          BL       DataScope_Get_Channel_Data
;;;81     		DataScope_Get_Channel_Data( Vol, 3 );                 //显示电池电压 单位：V
0002f8  2103              MOVS     r1,#3
0002fa  483c              LDR      r0,|L1.1004|
0002fc  6800              LDR      r0,[r0,#0]  ; Vol
0002fe  f7fffffe          BL       DataScope_Get_Channel_Data
;;;82     //		DataScope_Get_Channel_Data( 0 , 4 );   
;;;83     //		DataScope_Get_Channel_Data(0, 5 ); //用您要显示的数据替换0就行了
;;;84     //		DataScope_Get_Channel_Data(0 , 6 );//用您要显示的数据替换0就行了
;;;85     //		DataScope_Get_Channel_Data(0, 7 );
;;;86     //		DataScope_Get_Channel_Data( 0, 8 ); 
;;;87     //		DataScope_Get_Channel_Data(0, 9 );  
;;;88     //		DataScope_Get_Channel_Data( 0 , 10);
;;;89     		Send_Count = DataScope_Data_Generate(3);
000302  2003              MOVS     r0,#3
000304  f7fffffe          BL       DataScope_Data_Generate
000308  4939              LDR      r1,|L1.1008|
00030a  7008              STRB     r0,[r1,#0]
;;;90     		for( i = 0 ; i < Send_Count; i++) 
00030c  2000              MOVS     r0,#0
00030e  4939              LDR      r1,|L1.1012|
000310  7008              STRB     r0,[r1,#0]
000312  e011              B        |L1.824|
                  |L1.788|
;;;91     		{
;;;92     		while((USART1->SR&0X40)==0);  
000314  bf00              NOP      
                  |L1.790|
000316  4838              LDR      r0,|L1.1016|
000318  8800              LDRH     r0,[r0,#0]
00031a  f0100f40          TST      r0,#0x40
00031e  d0fa              BEQ      |L1.790|
;;;93     		USART1->DR = DataScope_OutPut_Buffer[i]; 
000320  4836              LDR      r0,|L1.1020|
000322  4934              LDR      r1,|L1.1012|
000324  7809              LDRB     r1,[r1,#0]  ; i
000326  5c40              LDRB     r0,[r0,r1]
000328  4935              LDR      r1,|L1.1024|
00032a  8008              STRH     r0,[r1,#0]
00032c  4831              LDR      r0,|L1.1012|
00032e  7800              LDRB     r0,[r0,#0]            ;90  ; i
000330  f1000001          ADD      r0,r0,#1              ;90
000334  492f              LDR      r1,|L1.1012|
000336  7008              STRB     r0,[r1,#0]            ;90
                  |L1.824|
000338  482e              LDR      r0,|L1.1012|
00033a  7800              LDRB     r0,[r0,#0]            ;90  ; i
00033c  492c              LDR      r1,|L1.1008|
00033e  7809              LDRB     r1,[r1,#0]            ;90  ; Send_Count
000340  4288              CMP      r0,r1                 ;90
000342  dbe7              BLT      |L1.788|
;;;94     		}
;;;95     }
000344  bd70              POP      {r4-r6,pc}
                          ENDP

000346  0000              DCW      0x0000
                  |L1.840|
                          DCD      Way_Angle
                  |L1.844|
00034c  444d5000          DCB      "DMP",0
                  |L1.848|
000350  4b616c6d          DCB      "Kalman",0
000354  616e00  
000357  00                DCB      0
                  |L1.856|
000358  48756275          DCB      "Hubu",0
00035c  00      
00035d  00                DCB      0
00035e  00                DCB      0
00035f  00                DCB      0
                  |L1.864|
                          DCD      Bi_zhang
                  |L1.868|
000364  42697a68          DCB      "Bizhang",0
000368  616e6700
                  |L1.876|
00036c  5075746f          DCB      "Putong",0
000370  6e6700  
000373  00                DCB      0
                  |L1.884|
                          DCD      Temperature
                  |L1.888|
000378  2e00              DCB      ".",0
00037a  00                DCB      0
00037b  00                DCB      0
                  |L1.892|
00037c  604300            DCB      "`C",0
00037f  00                DCB      0
                  |L1.896|
                          DCD      Distance
                  |L1.900|
000384  6d6d00            DCB      "mm",0
000387  00                DCB      0
                  |L1.904|
000388  456e636f          DCB      "EncoLEFT",0
00038c  4c454654
000390  00      
000391  00                DCB      0
000392  00                DCB      0
000393  00                DCB      0
                  |L1.916|
                          DCD      Encoder_Left
                  |L1.920|
000398  2d00              DCB      "-",0
00039a  00                DCB      0
00039b  00                DCB      0
                  |L1.924|
00039c  2b00              DCB      "+",0
00039e  00                DCB      0
00039f  00                DCB      0
                  |L1.928|
0003a0  456e636f          DCB      "EncoRIGHT",0
0003a4  52494748
0003a8  5400    
0003aa  00                DCB      0
0003ab  00                DCB      0
                  |L1.940|
                          DCD      Encoder_Right
                  |L1.944|
0003b0  566f6c74          DCB      "Volta",0
0003b4  6100    
0003b6  00                DCB      0
0003b7  00                DCB      0
                  |L1.952|
0003b8  5600              DCB      "V",0
0003ba  00                DCB      0
0003bb  00                DCB      0
                  |L1.956|
                          DCD      Voltage
                  |L1.960|
0003c0  416e676c          DCB      "Angle",0
0003c4  6500    
0003c6  00                DCB      0
0003c7  00                DCB      0
                  |L1.968|
                          DCD      Angle_Balance
                  |L1.972|
                          DCD      0x43b40000
                  |L1.976|
                          DCD      0x9999999a
                  |L1.980|
                          DCD      0x3ff19999
                  |L1.984|
0003d8  5a25643a          DCB      "Z%d:%d:%d:%dL$$",0
0003dc  25643a25
0003e0  643a2564
0003e4  4c2400  
0003e7  00                DCB      0
                  |L1.1000|
                          DCD      0x42c80000
                  |L1.1004|
                          DCD      Vol
                  |L1.1008|
                          DCD      Send_Count
                  |L1.1012|
                          DCD      i
                  |L1.1016|
                          DCD      0x40013800
                  |L1.1020|
                          DCD      DataScope_OutPut_Buffer
                  |L1.1024|
                          DCD      0x40013804

                          AREA ||.data||, DATA, ALIGN=2

                  i
000000  00                DCB      0x00
                  Send_Count
000001  000000            DCB      0x00,0x00,0x00
                  Vol
                          DCD      0x00000000

; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\key.o --depend=..\OBJ\key.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\OLED -I..\HARDWARE\ADC -I..\HARDWARE\TIMER -I..\HARDWARE\MOTOR -I..\BALANCE\CONTROL -I..\HARDWARE\ENCODER -I..\HARDWARE\IIC -I..\BALANCE\CONTROL -I..\BALANCE\DMP -I..\BALANCE\filter -I..\BALANCE\MPU6050 -I..\BALANCE\show -I..\BALANCE\controls -I..\HARDWARE\USART3 -I..\HARDWARE\EXTI -I..\HARDWARE\DataScope_DP -I"H:\KEIL MDK4\ARM\INC" -I"H:\KEIL MDK4\ARM\INC\STMicroelectronics" -DSTM32F10X_MD --omf_browse=..\OBJ\key.crf ..\HARDWARE\KEY\key.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  KEY_Init PROC
;;;6      **************************************************************************/
;;;7      void KEY_Init(void)
000000  4857              LDR      r0,|L1.352|
;;;8      {
;;;9      	RCC->APB2ENR|=1<<2;    //使能PORTA时钟	   	 
000002  6980              LDR      r0,[r0,#0x18]
000004  f0400004          ORR      r0,r0,#4
000008  4955              LDR      r1,|L1.352|
00000a  6188              STR      r0,[r1,#0x18]
;;;10     	GPIOA->CRH&=0X0FFFFFFF; 
00000c  4855              LDR      r0,|L1.356|
00000e  6800              LDR      r0,[r0,#0]
000010  f0204070          BIC      r0,r0,#0xf0000000
000014  4954              LDR      r1,|L1.360|
000016  f8c10804          STR      r0,[r1,#0x804]
;;;11     	GPIOA->CRH|=0X80000000;//PA15 上拉输入
00001a  4608              MOV      r0,r1
00001c  f8d00804          LDR      r0,[r0,#0x804]
000020  f0404000          ORR      r0,r0,#0x80000000
000024  f8c10804          STR      r0,[r1,#0x804]
;;;12       GPIOA->ODR|=1<<15; //PA15 上拉	
000028  4608              MOV      r0,r1
00002a  f8d0080c          LDR      r0,[r0,#0x80c]
00002e  f4404000          ORR      r0,r0,#0x8000
000032  f8c1080c          STR      r0,[r1,#0x80c]
;;;13     } 
000036  4770              BX       lr
;;;14     /**************************************************************************
                          ENDP

                  click_N_Double PROC
;;;18     **************************************************************************/
;;;19     u8 click_N_Double (u8 time)
000038  4601              MOV      r1,r0
;;;20     {
;;;21     		static	u8 flag_key,count_key,double_key;	
;;;22     		static	u16 count_single,Forever_count;
;;;23     	  if(KEY==0)  Forever_count++;   //长按标志位未置1
00003a  484c              LDR      r0,|L1.364|
00003c  6800              LDR      r0,[r0,#0]
00003e  b928              CBNZ     r0,|L1.76|
000040  484b              LDR      r0,|L1.368|
000042  8800              LDRH     r0,[r0,#0]  ; Forever_count
000044  1c40              ADDS     r0,r0,#1
000046  4a4a              LDR      r2,|L1.368|
000048  8010              STRH     r0,[r2,#0]
00004a  e002              B        |L1.82|
                  |L1.76|
;;;24          else        Forever_count=0;
00004c  2000              MOVS     r0,#0
00004e  4a48              LDR      r2,|L1.368|
000050  8010              STRH     r0,[r2,#0]
                  |L1.82|
;;;25     		if(0==KEY&&0==flag_key)		flag_key=1;	
000052  4846              LDR      r0,|L1.364|
000054  6800              LDR      r0,[r0,#0]
000056  b928              CBNZ     r0,|L1.100|
000058  4846              LDR      r0,|L1.372|
00005a  7800              LDRB     r0,[r0,#0]  ; flag_key
00005c  b910              CBNZ     r0,|L1.100|
00005e  2001              MOVS     r0,#1
000060  4a44              LDR      r2,|L1.372|
000062  7010              STRB     r0,[r2,#0]
                  |L1.100|
;;;26     	  if(0==count_key)
000064  4844              LDR      r0,|L1.376|
000066  7800              LDRB     r0,[r0,#0]  ; count_key
000068  b9b0              CBNZ     r0,|L1.152|
;;;27     		{
;;;28     				if(flag_key==1) 
00006a  4842              LDR      r0,|L1.372|
00006c  7800              LDRB     r0,[r0,#0]  ; flag_key
00006e  2801              CMP      r0,#1
000070  d107              BNE      |L1.130|
;;;29     				{
;;;30     					double_key++;
000072  4842              LDR      r0,|L1.380|
000074  7800              LDRB     r0,[r0,#0]  ; double_key
000076  1c40              ADDS     r0,r0,#1
000078  4a40              LDR      r2,|L1.380|
00007a  7010              STRB     r0,[r2,#0]
;;;31     					count_key=1;	
00007c  2001              MOVS     r0,#1
00007e  4a3e              LDR      r2,|L1.376|
000080  7010              STRB     r0,[r2,#0]
                  |L1.130|
;;;32     				}
;;;33     				if(double_key==2) 
000082  483e              LDR      r0,|L1.380|
000084  7800              LDRB     r0,[r0,#0]  ; double_key
000086  2802              CMP      r0,#2
000088  d106              BNE      |L1.152|
;;;34     				{
;;;35     					double_key=0;
00008a  2000              MOVS     r0,#0
00008c  4a3b              LDR      r2,|L1.380|
00008e  7010              STRB     r0,[r2,#0]
;;;36     					count_single=0;
000090  4a3b              LDR      r2,|L1.384|
000092  8010              STRH     r0,[r2,#0]
;;;37     					return 2;//双击执行的指令
000094  2002              MOVS     r0,#2
                  |L1.150|
;;;38     				}
;;;39     		}
;;;40     		if(1==KEY)			flag_key=0,count_key=0;
;;;41     		
;;;42     		if(1==double_key)
;;;43     		{
;;;44     			count_single++;
;;;45     			if(count_single>time&&Forever_count<time)
;;;46     			{
;;;47     			double_key=0;
;;;48     			count_single=0;	
;;;49     			return 1;//单击执行的指令
;;;50     			}
;;;51     			if(Forever_count>time)
;;;52     			{
;;;53     			double_key=0;
;;;54     			count_single=0;	
;;;55     			}
;;;56     		}	
;;;57     		return 0;
;;;58     }
000096  4770              BX       lr
                  |L1.152|
000098  4834              LDR      r0,|L1.364|
00009a  6800              LDR      r0,[r0,#0]            ;40
00009c  2801              CMP      r0,#1                 ;40
00009e  d104              BNE      |L1.170|
0000a0  2000              MOVS     r0,#0                 ;40
0000a2  4a34              LDR      r2,|L1.372|
0000a4  7010              STRB     r0,[r2,#0]            ;40
0000a6  4a34              LDR      r2,|L1.376|
0000a8  7010              STRB     r0,[r2,#0]            ;40
                  |L1.170|
0000aa  4834              LDR      r0,|L1.380|
0000ac  7800              LDRB     r0,[r0,#0]            ;42  ; double_key
0000ae  2801              CMP      r0,#1                 ;42
0000b0  d11c              BNE      |L1.236|
0000b2  4833              LDR      r0,|L1.384|
0000b4  8800              LDRH     r0,[r0,#0]            ;44  ; count_single
0000b6  1c40              ADDS     r0,r0,#1              ;44
0000b8  4a31              LDR      r2,|L1.384|
0000ba  8010              STRH     r0,[r2,#0]            ;44
0000bc  4610              MOV      r0,r2                 ;45
0000be  8800              LDRH     r0,[r0,#0]            ;45  ; count_single
0000c0  4288              CMP      r0,r1                 ;45
0000c2  dd0a              BLE      |L1.218|
0000c4  482a              LDR      r0,|L1.368|
0000c6  8800              LDRH     r0,[r0,#0]            ;45  ; Forever_count
0000c8  4288              CMP      r0,r1                 ;45
0000ca  da06              BGE      |L1.218|
0000cc  2000              MOVS     r0,#0                 ;47
0000ce  4a2b              LDR      r2,|L1.380|
0000d0  7010              STRB     r0,[r2,#0]            ;47
0000d2  4a2b              LDR      r2,|L1.384|
0000d4  8010              STRH     r0,[r2,#0]            ;48
0000d6  2001              MOVS     r0,#1                 ;49
0000d8  e7dd              B        |L1.150|
                  |L1.218|
0000da  4825              LDR      r0,|L1.368|
0000dc  8800              LDRH     r0,[r0,#0]            ;51  ; Forever_count
0000de  4288              CMP      r0,r1                 ;51
0000e0  dd04              BLE      |L1.236|
0000e2  2000              MOVS     r0,#0                 ;53
0000e4  4a25              LDR      r2,|L1.380|
0000e6  7010              STRB     r0,[r2,#0]            ;53
0000e8  4a25              LDR      r2,|L1.384|
0000ea  8010              STRH     r0,[r2,#0]            ;54
                  |L1.236|
0000ec  2000              MOVS     r0,#0                 ;57
0000ee  e7d2              B        |L1.150|
;;;59     /**************************************************************************
                          ENDP

                  click PROC
;;;63     **************************************************************************/
;;;64     u8 click(void)
0000f0  4824              LDR      r0,|L1.388|
;;;65     {
;;;66     			static u8 flag_key=1;//按键按松开标志
;;;67     			if(flag_key&&KEY==0)
0000f2  7800              LDRB     r0,[r0,#0]  ; flag_key
0000f4  b138              CBZ      r0,|L1.262|
0000f6  481d              LDR      r0,|L1.364|
0000f8  6800              LDR      r0,[r0,#0]
0000fa  b920              CBNZ     r0,|L1.262|
;;;68     			{
;;;69     			flag_key=0;
0000fc  2000              MOVS     r0,#0
0000fe  4921              LDR      r1,|L1.388|
000100  7008              STRB     r0,[r1,#0]
;;;70     			return 1;	// 按键按下
000102  2001              MOVS     r0,#1
                  |L1.260|
;;;71     			}
;;;72     			else if(1==KEY)			flag_key=1;
;;;73     			return 0;//无按键按下
;;;74     }
000104  4770              BX       lr
                  |L1.262|
000106  4819              LDR      r0,|L1.364|
000108  6800              LDR      r0,[r0,#0]            ;72
00010a  2801              CMP      r0,#1                 ;72
00010c  d101              BNE      |L1.274|
00010e  491d              LDR      r1,|L1.388|
000110  7008              STRB     r0,[r1,#0]            ;72
                  |L1.274|
000112  2000              MOVS     r0,#0                 ;73
000114  e7f6              B        |L1.260|
;;;75     /**************************************************************************
                          ENDP

                  Long_Press PROC
;;;79     **************************************************************************/
;;;80     u8 Long_Press(void)
000116  481c              LDR      r0,|L1.392|
;;;81     {
;;;82     			static u16 Long_Press_count,Long_Press;
;;;83     	    if(Long_Press==0&&KEY==0)  Long_Press_count++;   //长按标志位未置1
000118  8800              LDRH     r0,[r0,#0]  ; Long_Press
00011a  b940              CBNZ     r0,|L1.302|
00011c  4813              LDR      r0,|L1.364|
00011e  6800              LDR      r0,[r0,#0]
000120  b928              CBNZ     r0,|L1.302|
000122  481a              LDR      r0,|L1.396|
000124  8800              LDRH     r0,[r0,#0]  ; Long_Press_count
000126  1c40              ADDS     r0,r0,#1
000128  4918              LDR      r1,|L1.396|
00012a  8008              STRH     r0,[r1,#0]
00012c  e002              B        |L1.308|
                  |L1.302|
;;;84           else                       Long_Press_count=0; 
00012e  2000              MOVS     r0,#0
000130  4916              LDR      r1,|L1.396|
000132  8008              STRH     r0,[r1,#0]
                  |L1.308|
;;;85     		  if(Long_Press_count>200)		
000134  4815              LDR      r0,|L1.396|
000136  8800              LDRH     r0,[r0,#0]  ; Long_Press_count
000138  28c8              CMP      r0,#0xc8
00013a  dd07              BLE      |L1.332|
;;;86     			{
;;;87     				Long_Press=1;	
00013c  2001              MOVS     r0,#1
00013e  4912              LDR      r1,|L1.392|
000140  8008              STRH     r0,[r1,#0]
;;;88     				Long_Press_count=0;
000142  2000              MOVS     r0,#0
000144  4911              LDR      r1,|L1.396|
000146  8008              STRH     r0,[r1,#0]
;;;89     				return 1;
000148  2001              MOVS     r0,#1
                  |L1.330|
;;;90     			}				
;;;91     			 if(Long_Press==1)     //长按标志位置1
;;;92     			{
;;;93     				  Long_Press=0;
;;;94     			}
;;;95     			return 0;
;;;96     }
00014a  4770              BX       lr
                  |L1.332|
00014c  480e              LDR      r0,|L1.392|
00014e  8800              LDRH     r0,[r0,#0]            ;91  ; Long_Press
000150  2801              CMP      r0,#1                 ;91
000152  d102              BNE      |L1.346|
000154  2000              MOVS     r0,#0                 ;93
000156  490c              LDR      r1,|L1.392|
000158  8008              STRH     r0,[r1,#0]            ;93
                  |L1.346|
00015a  2000              MOVS     r0,#0                 ;95
00015c  e7f5              B        |L1.330|
                          ENDP

00015e  0000              DCW      0x0000
                  |L1.352|
                          DCD      0x40021000
                  |L1.356|
                          DCD      0x40010804
                  |L1.360|
                          DCD      0x40010000
                  |L1.364|
                          DCD      0x4221013c
                  |L1.368|
                          DCD      Forever_count
                  |L1.372|
                          DCD      flag_key
                  |L1.376|
                          DCD      count_key
                  |L1.380|
                          DCD      double_key
                  |L1.384|
                          DCD      count_single
                  |L1.388|
                          DCD      |symbol_number.12|
                  |L1.392|
                          DCD      |symbol_number.14|
                  |L1.396|
                          DCD      Long_Press_count

                          AREA ||.data||, DATA, ALIGN=1

                  flag_key
000000  00                DCB      0x00
                  count_key
000001  00                DCB      0x00
                  double_key
000002  0000              DCB      0x00,0x00
                  count_single
000004  0000              DCB      0x00,0x00
                  Forever_count
000006  0000              DCB      0x00,0x00
                  |symbol_number.12|
000008  0100              DCB      0x01,0x00
                  Long_Press_count
00000a  0000              DCB      0x00,0x00
                  |symbol_number.14|
00000c  0000              DCB      0x00,0x00

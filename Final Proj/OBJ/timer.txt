; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\timer.o --depend=..\OBJ\timer.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\OLED -I..\HARDWARE\ADC -I..\HARDWARE\TIMER -I..\HARDWARE\MOTOR -I..\BALANCE\CONTROL -I..\HARDWARE\ENCODER -I..\HARDWARE\IIC -I..\BALANCE\CONTROL -I..\BALANCE\DMP -I..\BALANCE\filter -I..\BALANCE\MPU6050 -I..\BALANCE\show -I..\BALANCE\controls -I..\HARDWARE\USART3 -I..\HARDWARE\EXTI -I..\HARDWARE\DataScope_DP -I"H:\KEIL MDK4\ARM\INC" -I"H:\KEIL MDK4\ARM\INC\STMicroelectronics" -DSTM32F10X_MD --omf_browse=..\OBJ\timer.crf ..\HARDWARE\TIMER\timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  TIM3_Cap_Init PROC
;;;6      **************************************************************************/
;;;7      void TIM3_Cap_Init(u16 arr,u16 psc)	
000000  b570              PUSH     {r4-r6,lr}
;;;8      {	 
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;9      	RCC->APB1ENR|=1<<1;     //TIM3时钟使能     
000006  4871              LDR      r0,|L1.460|
000008  69c0              LDR      r0,[r0,#0x1c]
00000a  f0400002          ORR      r0,r0,#2
00000e  496f              LDR      r1,|L1.460|
000010  61c8              STR      r0,[r1,#0x1c]
;;;10     	RCC->APB2ENR|=1<<3;    	//使能PORTB时钟   	 
000012  4608              MOV      r0,r1
000014  6980              LDR      r0,[r0,#0x18]
000016  f0400008          ORR      r0,r0,#8
00001a  6188              STR      r0,[r1,#0x18]
;;;11     	GPIOB->CRL&=0XFFFFFF00; 
00001c  486c              LDR      r0,|L1.464|
00001e  6800              LDR      r0,[r0,#0]
000020  f02000ff          BIC      r0,r0,#0xff
000024  496b              LDR      r1,|L1.468|
000026  f8c10c00          STR      r0,[r1,#0xc00]
;;;12     	GPIOB->CRL|=0X00000028;//  	PB.0 输入 PB.1输出
00002a  4608              MOV      r0,r1
00002c  f8d00c00          LDR      r0,[r0,#0xc00]
000030  f0400028          ORR      r0,r0,#0x28
000034  f8c10c00          STR      r0,[r1,#0xc00]
;;;13     	
;;;14       TIM3->ARR=arr;  		//设定计数器自动重装值   
000038  f04f4080          MOV      r0,#0x40000000
00003c  f8a0442c          STRH     r4,[r0,#0x42c]
;;;15     	TIM3->PSC=psc;  		//预分频器 
000040  f8a05428          STRH     r5,[r0,#0x428]
;;;16     	TIM3->CCMR2|=1<<0;	//选择输入端 
000044  f8b0041c          LDRH     r0,[r0,#0x41c]
000048  f0400001          ORR      r0,r0,#1
00004c  f04f4180          MOV      r1,#0x40000000
000050  f8a1041c          STRH     r0,[r1,#0x41c]
;;;17      	TIM3->CCMR2|=0<<4; 	// 配置输入滤波器 不滤波
000054  4860              LDR      r0,|L1.472|
000056  8800              LDRH     r0,[r0,#0]
000058  f8a1041c          STRH     r0,[r1,#0x41c]
;;;18      	TIM3->CCMR2|=0<<2; 	//配置输入分频,不分频 
00005c  485e              LDR      r0,|L1.472|
00005e  8800              LDRH     r0,[r0,#0]
000060  f8a1041c          STRH     r0,[r1,#0x41c]
;;;19     
;;;20     	TIM3->CCER|=0<<9; 	//上升沿捕获
000064  485d              LDR      r0,|L1.476|
000066  8800              LDRH     r0,[r0,#0]
000068  f8a10420          STRH     r0,[r1,#0x420]
;;;21     	TIM3->CCER|=1<<8; 	//允许捕获计数器的值到捕获寄存器中
00006c  4608              MOV      r0,r1
00006e  f8b00420          LDRH     r0,[r0,#0x420]
000072  f4407080          ORR      r0,r0,#0x100
000076  f8a10420          STRH     r0,[r1,#0x420]
;;;22     
;;;23     	TIM3->DIER|=1<<3;   //允许捕获中断				
00007a  4608              MOV      r0,r1
00007c  f8b0040c          LDRH     r0,[r0,#0x40c]
000080  f0400008          ORR      r0,r0,#8
000084  f8a1040c          STRH     r0,[r1,#0x40c]
;;;24     	TIM3->DIER|=1<<0;   //允许更新中断	
000088  4608              MOV      r0,r1
00008a  f8b0040c          LDRH     r0,[r0,#0x40c]
00008e  f0400001          ORR      r0,r0,#1
000092  f8a1040c          STRH     r0,[r1,#0x40c]
;;;25     	TIM3->CR1|=0x01;    //使能定时器3
000096  4608              MOV      r0,r1
000098  f8b00400          LDRH     r0,[r0,#0x400]
00009c  f0400001          ORR      r0,r0,#1
0000a0  f8a10400          STRH     r0,[r1,#0x400]
;;;26     	MY_NVIC_Init(1,3,TIM3_IRQn,1);
0000a4  f04f0301          MOV      r3,#1
0000a8  f04f021d          MOV      r2,#0x1d
0000ac  f04f0103          MOV      r1,#3
0000b0  4618              MOV      r0,r3
0000b2  f7fffffe          BL       MY_NVIC_Init
;;;27     }
0000b6  bd70              POP      {r4-r6,pc}
;;;28     /**************************************************************************
                          ENDP

                  Read_Distane PROC
;;;33     u16 TIM3CH3_CAPTURE_STA,TIM3CH3_CAPTURE_VAL;
;;;34     void Read_Distane(void)
0000b8  b510              PUSH     {r4,lr}
;;;35     {   
;;;36     	 PBout(1)=1;
0000ba  2001              MOVS     r0,#1
0000bc  4948              LDR      r1,|L1.480|
0000be  6008              STR      r0,[r1,#0]
;;;37     	 delay_us(15);  
0000c0  f04f000f          MOV      r0,#0xf
0000c4  f7fffffe          BL       delay_us
;;;38     	 PBout(1)=0;	
0000c8  2000              MOVS     r0,#0
0000ca  4946              LDR      r1,|L1.484|
0000cc  f8c10184          STR      r0,[r1,#0x184]
;;;39     			if(TIM3CH3_CAPTURE_STA&0X80)//成功捕获到了一次高电平
0000d0  4845              LDR      r0,|L1.488|
0000d2  8800              LDRH     r0,[r0,#0]  ; TIM3CH3_CAPTURE_STA
0000d4  f0100f80          TST      r0,#0x80
0000d8  d01d              BEQ      |L1.278|
;;;40     		{
;;;41     			Distance=TIM3CH3_CAPTURE_STA&0X3F;
0000da  4843              LDR      r0,|L1.488|
0000dc  8800              LDRH     r0,[r0,#0]  ; TIM3CH3_CAPTURE_STA
0000de  f000003f          AND      r0,r0,#0x3f
0000e2  4942              LDR      r1,|L1.492|
0000e4  6008              STR      r0,[r1,#0]  ; Distance
;;;42     			Distance*=65536;					        //溢出时间总和
0000e6  4608              MOV      r0,r1
0000e8  6800              LDR      r0,[r0,#0]  ; Distance
0000ea  0400              LSLS     r0,r0,#16
0000ec  6008              STR      r0,[r1,#0]  ; Distance
;;;43     			Distance+=TIM3CH3_CAPTURE_VAL;		//得到总的高电平时间
0000ee  4608              MOV      r0,r1
0000f0  6800              LDR      r0,[r0,#0]  ; Distance
0000f2  493f              LDR      r1,|L1.496|
0000f4  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_VAL
0000f6  4408              ADD      r0,r0,r1
0000f8  493c              LDR      r1,|L1.492|
0000fa  6008              STR      r0,[r1,#0]  ; Distance
;;;44     			Distance=Distance*170/1000;
0000fc  4608              MOV      r0,r1
0000fe  6800              LDR      r0,[r0,#0]  ; Distance
000100  21aa              MOVS     r1,#0xaa
000102  4348              MULS     r0,r1,r0
000104  f44f717a          MOV      r1,#0x3e8
000108  fbb0f0f1          UDIV     r0,r0,r1
00010c  4937              LDR      r1,|L1.492|
00010e  6008              STR      r0,[r1,#0]  ; Distance
;;;45     		//	printf("%d \r\n",Distance);
;;;46     			TIM3CH3_CAPTURE_STA=0;			//开启下一次捕获
000110  2000              MOVS     r0,#0
000112  4935              LDR      r1,|L1.488|
000114  8008              STRH     r0,[r1,#0]
                  |L1.278|
;;;47     		}				
;;;48     }
000116  bd10              POP      {r4,pc}
;;;49     /**************************************************************************
                          ENDP

                  TIM3_IRQHandler PROC
;;;54     **************************************************************************/
;;;55     void TIM3_IRQHandler(void)
000118  4936              LDR      r1,|L1.500|
;;;56     { 		    		  			    
;;;57     	u16 tsr;
;;;58     	tsr=TIM3->SR;
00011a  8808              LDRH     r0,[r1,#0]
;;;59     	if((TIM3CH3_CAPTURE_STA&0X80)==0)//还未成功捕获	
00011c  4932              LDR      r1,|L1.488|
00011e  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
000120  f0110f80          TST      r1,#0x80
000124  d14e              BNE      |L1.452|
;;;60     				{
;;;61     								if(tsr&0X01)//溢出
000126  f0100f01          TST      r0,#1
00012a  d01a              BEQ      |L1.354|
;;;62     								{	    
;;;63     										if(TIM3CH3_CAPTURE_STA&0X40)//已经捕获到高电平了
00012c  492e              LDR      r1,|L1.488|
00012e  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
000130  f0110f40          TST      r1,#0x40
000134  d015              BEQ      |L1.354|
;;;64     										{
;;;65     											if((TIM3CH3_CAPTURE_STA&0X3F)==0X3F)//高电平太长了
000136  492c              LDR      r1,|L1.488|
000138  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
00013a  f001013f          AND      r1,r1,#0x3f
00013e  293f              CMP      r1,#0x3f
000140  d10a              BNE      |L1.344|
;;;66     											{
;;;67     												TIM3CH3_CAPTURE_STA|=0X80;//标记成功捕获了一次
000142  4929              LDR      r1,|L1.488|
000144  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
000146  f0410180          ORR      r1,r1,#0x80
00014a  4a27              LDR      r2,|L1.488|
00014c  8011              STRH     r1,[r2,#0]
;;;68     												TIM3CH3_CAPTURE_VAL=0XFFFF;
00014e  f64f71ff          MOV      r1,#0xffff
000152  4a27              LDR      r2,|L1.496|
000154  8011              STRH     r1,[r2,#0]
000156  e004              B        |L1.354|
                  |L1.344|
;;;69     											}else TIM3CH3_CAPTURE_STA++;
000158  4923              LDR      r1,|L1.488|
00015a  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
00015c  1c49              ADDS     r1,r1,#1
00015e  4a22              LDR      r2,|L1.488|
000160  8011              STRH     r1,[r2,#0]
                  |L1.354|
;;;70     										}	 
;;;71     								}
;;;72     						   	if(tsr&0x08)//捕获3发生捕获事件
000162  f0100f08          TST      r0,#8
000166  d02d              BEQ      |L1.452|
;;;73     				    	{	
;;;74     											if(TIM3CH3_CAPTURE_STA&0X40)		//捕获到一个下降沿 		
000168  491f              LDR      r1,|L1.488|
00016a  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
00016c  f0110f40          TST      r1,#0x40
000170  d012              BEQ      |L1.408|
;;;75     											{	  			
;;;76     											TIM3CH3_CAPTURE_STA|=0X80;		//标记成功捕获到一次高电平脉宽
000172  491d              LDR      r1,|L1.488|
000174  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
000176  f0410180          ORR      r1,r1,#0x80
00017a  4a1b              LDR      r2,|L1.488|
00017c  8011              STRH     r1,[r2,#0]
;;;77     											TIM3CH3_CAPTURE_VAL=TIM3->CCR3;	//获取当前的捕获值.
00017e  491e              LDR      r1,|L1.504|
000180  8809              LDRH     r1,[r1,#0]
000182  4a1b              LDR      r2,|L1.496|
000184  8011              STRH     r1,[r2,#0]
;;;78     											TIM3->CCER&=~(1<<9);			//CC1P=0 设置为上升沿捕获
000186  f04f4180          MOV      r1,#0x40000000
00018a  f8b11420          LDRH     r1,[r1,#0x420]
00018e  f4217100          BIC      r1,r1,#0x200
000192  4a12              LDR      r2,|L1.476|
000194  8011              STRH     r1,[r2,#0]
000196  e015              B        |L1.452|
                  |L1.408|
;;;79     									  	}else  								//还未开始,第一次捕获上升沿
;;;80     				   	{
;;;81     											TIM3CH3_CAPTURE_STA=0;			//清空
000198  2100              MOVS     r1,#0
00019a  4a13              LDR      r2,|L1.488|
00019c  8011              STRH     r1,[r2,#0]
;;;82     											TIM3CH3_CAPTURE_VAL=0;
00019e  4a14              LDR      r2,|L1.496|
0001a0  8011              STRH     r1,[r2,#0]
;;;83     											TIM3CH3_CAPTURE_STA|=0X40;		//标记捕获到了上升沿
0001a2  4911              LDR      r1,|L1.488|
0001a4  8809              LDRH     r1,[r1,#0]  ; TIM3CH3_CAPTURE_STA
0001a6  f0410140          ORR      r1,r1,#0x40
0001aa  4a0f              LDR      r2,|L1.488|
0001ac  8011              STRH     r1,[r2,#0]
;;;84     											TIM3->CNT=0;					//计数器清空
0001ae  2100              MOVS     r1,#0
0001b0  4a12              LDR      r2,|L1.508|
0001b2  8011              STRH     r1,[r2,#0]
;;;85     											TIM3->CCER|=1<<9; 				//CC1P=1 设置为下降沿捕获
0001b4  f04f4180          MOV      r1,#0x40000000
0001b8  f8b11420          LDRH     r1,[r1,#0x420]
0001bc  f4417100          ORR      r1,r1,#0x200
0001c0  4a06              LDR      r2,|L1.476|
0001c2  8011              STRH     r1,[r2,#0]
                  |L1.452|
;;;86     							}		    
;;;87     					    	}			     	    					   
;;;88     		   }
;;;89     			 TIM3->SR=0;//清除中断标志位 	     
0001c4  2100              MOVS     r1,#0
0001c6  4a0b              LDR      r2,|L1.500|
0001c8  8011              STRH     r1,[r2,#0]
;;;90     }
0001ca  4770              BX       lr
                          ENDP

                  |L1.460|
                          DCD      0x40021000
                  |L1.464|
                          DCD      0x40010c00
                  |L1.468|
                          DCD      0x40010000
                  |L1.472|
                          DCD      0x4000041c
                  |L1.476|
                          DCD      0x40000420
                  |L1.480|
                          DCD      0x42218184
                  |L1.484|
                          DCD      0x42218000
                  |L1.488|
                          DCD      TIM3CH3_CAPTURE_STA
                  |L1.492|
                          DCD      Distance
                  |L1.496|
                          DCD      TIM3CH3_CAPTURE_VAL
                  |L1.500|
                          DCD      0x40000410
                  |L1.504|
                          DCD      0x4000043c
                  |L1.508|
                          DCD      0x40000424

                          AREA ||.data||, DATA, ALIGN=1

                  TIM3CH3_CAPTURE_STA
000000  0000              DCB      0x00,0x00
                  TIM3CH3_CAPTURE_VAL
000002  0000              DCB      0x00,0x00

; generated by ARM C/C++ Compiler, 4.1 [Build 481]
; commandline ArmCC [--debug -c --asm --interleave -o..\OBJ\minibalance.o --depend=..\OBJ\minibalance.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\SYSTEM\delay -I..\SYSTEM\sys -I..\SYSTEM\usart -I..\HARDWARE\LED -I..\HARDWARE\KEY -I..\HARDWARE\OLED -I..\HARDWARE\ADC -I..\HARDWARE\TIMER -I..\HARDWARE\MOTOR -I..\BALANCE\CONTROL -I..\HARDWARE\ENCODER -I..\HARDWARE\IIC -I..\BALANCE\CONTROL -I..\BALANCE\DMP -I..\BALANCE\filter -I..\BALANCE\MPU6050 -I..\BALANCE\show -I..\BALANCE\controls -I..\HARDWARE\USART3 -I..\HARDWARE\EXTI -I..\HARDWARE\DataScope_DP -I"H:\KEIL MDK4\ARM\INC" -I"H:\KEIL MDK4\ARM\INC\STMicroelectronics" -DSTM32F10X_MD --omf_browse=..\OBJ\minibalance.crf Minibalance.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;17     float Acceleration_Z;                      //Z轴加速度计  
;;;18     int main(void)
000000  2009              MOVS     r0,#9
;;;19     { 
;;;20     	Stm32_Clock_Init(9);            //=====系统时钟设置
000002  f7fffffe          BL       Stm32_Clock_Init
;;;21     	delay_init(72);                 //=====延时初始化
000006  2048              MOVS     r0,#0x48
000008  f7fffffe          BL       delay_init
;;;22     	JTAG_Set(JTAG_SWD_DISABLE);     //=====关闭JTAG接口
00000c  2002              MOVS     r0,#2
00000e  f7fffffe          BL       JTAG_Set
;;;23     	JTAG_Set(SWD_ENABLE);           //=====打开SWD接口 可以利用主板的SWD接口调试
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       JTAG_Set
;;;24     	LED_Init();                     //=====初始化与 LED 连接的硬件接口
000018  f7fffffe          BL       LED_Init
;;;25     	KEY_Init();                     //=====按键初始化
00001c  f7fffffe          BL       KEY_Init
;;;26     	OLED_Init();                    //=====OLED初始化
000020  f7fffffe          BL       OLED_Init
;;;27     	uart_init(72,128000);           //=====初始化串口1
000024  f44f31fa          MOV      r1,#0x1f400
000028  2048              MOVS     r0,#0x48
00002a  f7fffffe          BL       uart_init
;;;28       uart3_init(36,9600);            //=====串口3初始化
00002e  f44f5116          MOV      r1,#0x2580
000032  2024              MOVS     r0,#0x24
000034  f7fffffe          BL       uart3_init
;;;29       MiniBalance_PWM_Init(7199,0);   //=====初始化PWM 10KHZ，用于驱动电机 如需初始化电调接口 改为MiniBalance_PWM_Init(9999,35) 200HZ
000038  2100              MOVS     r1,#0
00003a  f641401f          MOV      r0,#0x1c1f
00003e  f7fffffe          BL       MiniBalance_PWM_Init
;;;30     	Encoder_Init_TIM2();            //=====编码器接口
000042  f7fffffe          BL       Encoder_Init_TIM2
;;;31     	Encoder_Init_TIM4();            //=====初始化编码器2 
000046  f7fffffe          BL       Encoder_Init_TIM4
;;;32     	Adc_Init();                     //=====adc初始化
00004a  f7fffffe          BL       Adc_Init
;;;33     	IIC_Init();                     //=====模拟IIC初始化
00004e  f7fffffe          BL       IIC_Init
;;;34       MPU6050_initialize();           //=====MPU6050初始化	
000052  f7fffffe          BL       MPU6050_initialize
;;;35       DMP_Init();                     //=====初始化DMP     
000056  f7fffffe          BL       DMP_Init
;;;36     	TIM3_Cap_Init(0XFFFF,72-1);	    //=====超声波初始化
00005a  2147              MOVS     r1,#0x47
00005c  f64f70ff          MOV      r0,#0xffff
000060  f7fffffe          BL       TIM3_Cap_Init
;;;37      	EXTI_Init();                    //=====MPU6050 5ms定时中断初始化
000064  f7fffffe          BL       EXTI_Init
;;;38     	while(1)
000068  e014              B        |L1.148|
                  |L1.106|
;;;39     		{     
;;;40     					if(Flag_Show==0)          //使用MiniBalanceV3.5 APP和OLED显示屏
00006a  480b              LDR      r0,|L1.152|
00006c  7800              LDRB     r0,[r0,#0]  ; Flag_Show
00006e  b920              CBNZ     r0,|L1.122|
;;;41     					{
;;;42     							APP_Show();	
000070  f7fffffe          BL       APP_Show
;;;43     							oled_show();          //===显示屏打开
000074  f7fffffe          BL       oled_show
000078  e001              B        |L1.126|
                  |L1.122|
;;;44     					}
;;;45     					else                      //使用MiniBalanceV3.5上位机 上位机使用的时候需要严格的时序，故此时关闭app监控部分和OLED显示屏
;;;46     					{
;;;47     				      DataScope();          //开启MiniBalanceV3.5上位机
00007a  f7fffffe          BL       DataScope
                  |L1.126|
;;;48     					}	
;;;49     				  delay_flag=1;	
00007e  2001              MOVS     r0,#1
000080  4906              LDR      r1,|L1.156|
000082  7008              STRB     r0,[r1,#0]
;;;50     					delay_50=0;
000084  2000              MOVS     r0,#0
000086  4906              LDR      r1,|L1.160|
000088  7008              STRB     r0,[r1,#0]
;;;51     					while(delay_flag);	     //通过MPU6050的INT中断实现的50ms精准延时				
00008a  bf00              NOP      
                  |L1.140|
00008c  4803              LDR      r0,|L1.156|
00008e  7800              LDRB     r0,[r0,#0]  ; delay_flag
000090  2800              CMP      r0,#0
000092  d1fb              BNE      |L1.140|
                  |L1.148|
000094  e7e9              B        |L1.106|
;;;52     		} 
;;;53     }
                          ENDP

000096  0000              DCW      0x0000
                  |L1.152|
                          DCD      Flag_Show
                  |L1.156|
                          DCD      delay_flag
                  |L1.160|
                          DCD      delay_50

                          AREA ||.data||, DATA, ALIGN=2

                  Way_Angle
000000  02                DCB      0x02
                  Flag_sudu
000001  02                DCB      0x02
                  Flag_Stop
000002  01                DCB      0x01
                  Flag_Show
000003  00                DCB      0x00
                  Bi_zhang
000004  00                DCB      0x00
                  Flag_Qian
000005  00                DCB      0x00
                  Flag_Hou
000006  00                DCB      0x00
                  Flag_Left
000007  00                DCB      0x00
                  Flag_Right
000008  00000000          DCB      0x00,0x00,0x00,0x00
                  Encoder_Left
                          DCD      0x00000000
                  Encoder_Right
                          DCD      0x00000000
                  Moto1
                          DCD      0x00000000
                  Moto2
                          DCD      0x00000000
                  Temperature
                          DCD      0x00000000
                  Voltage
                          DCD      0x00000000
                  Angle_Balance
                          DCD      0x00000000
                  Gyro_Balance
                          DCD      0x00000000
                  Gyro_Turn
                          DCD      0x00000000
                  Show_Data_Mb
                          DCD      0x00000000
                  Distance
                          DCD      0x00000000
                  delay_50
000038  00                DCB      0x00
                  delay_flag
000039  000000            DCB      0x00,0x00,0x00
                  Acceleration_Z
                          DCD      0x00000000

                  __ARM_use_no_argv EQU 0
